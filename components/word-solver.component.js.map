{"version":3,"file":"word-solver.component.js","sources":["word-solver.component.js"],"sourcesContent":["async function loadDictionary() {\n    try {\n        const response = await fetch('/assets/dictionaries/ptbr-utf8.txt');\n        if (!response.ok) {\n            throw new Error('Failed to load dictionary');\n        }\n        const text = await response.text();\n\n        const dictionary = text.split('\\n')\n            .map(line => line.trim().toLowerCase())\n            .filter(line => line.length > 0);\n\n        return dictionary;\n    } catch (error) {\n        console.error('Erro ao carregar o dicionário!', error);\n        throw 'Erro ao carregar o dicionário!';\n    }\n}\n\nexport async function wordSolver(params) {\n    const dictionary = await loadDictionary();\n\n    const results = [];\n    const letterCount = {};\n\n    params.letters = params.letters.toLowerCase();\n\n    // Conta as ocorrências de cada letra passada pelo usuário\n    for (const letter of params.letters) {\n        letterCount[letter] = (letterCount[letter] || 0) + 1;\n    }\n\n    for (const word of dictionary) {\n\n        if ((word == params.letters) ||\n            (params.minLength && word.length < params.minLength) ||\n            (params.maxLength && word.length > params.maxLength))\n            continue;\n        \n        let match = true;\n        const _letterCount = { ...letterCount };\n\n        for (const letter of word) {\n            if (!_letterCount[letter]) {\n                match = false;\n                break;\n            }\n            _letterCount[letter]--;\n        }\n\n        if (match) {\n            results.push(word);\n        }\n    }\n\n    return results;\n}\n"],"names":["async","loadDictionary","response","await","fetch","ok","text","split","map","line","trim","toLowerCase","filter","length","Error","error","console","wordSolver","params","letter","word","dictionary","results","letterCount","letters","minLength","maxLength","let","match","_letterCount","push"],"mappings":"AAAAA,eAAeC,iBACX,IACI,IAAMC,EAAWC,MAAMC,MAAM,oCAAoC,EACjE,GAAKF,EAASG,GASd,OANaF,MAAMD,EAASI,KAAK,GAETC,MAAM,IAAI,EAC7BC,IAAIC,GAAQA,EAAKC,KAAK,EAAEC,YAAY,CAAC,EACrCC,OAAOH,GAAsB,EAAdA,EAAKI,MAAU,EAN/B,MAAM,IAAIC,MAAM,2BAA2B,CAYnD,CAHE,MAAOC,GAEL,MADAC,QAAQD,MAAM,iCAAkCA,CAAK,EAC/C,gCACV,CACJ,CAEOf,eAAeiB,WAAWC,GAC7B,IAQWC,EAIAC,EAZLC,EAAalB,MAAMF,eAAe,EAElCqB,EAAU,GACVC,EAAc,GAEpBL,EAAOM,QAAUN,EAAOM,QAAQb,YAAY,EAG5C,IAAWQ,KAAUD,EAAOM,QACxBD,EAAYJ,IAAWI,EAAYJ,IAAW,GAAK,EAGvD,IAAWC,KAAQC,EAEf,GAAI,EAACD,GAAQF,EAAOM,SACfN,EAAOO,WAAaL,EAAKP,OAASK,EAAOO,WACzCP,EAAOQ,WAAaN,EAAKP,OAASK,EAAOQ,WAF9C,CAKAC,IAAIC,EAAQ,CAAA,EACZ,IAEWT,EAFLU,EAAe,CAAE,GAAGN,CAAY,EAEtC,IAAWJ,KAAUC,EAAM,CACvB,GAAI,CAACS,EAAaV,GAAS,CACvBS,EAAQ,CAAA,EACR,KACJ,CACAC,EAAaV,EAAO,EACxB,CAEIS,GACAN,EAAQQ,KAAKV,CAAI,CAdT,CAkBhB,OAAOE,CACX,QArCsBL,UAqCtB"}